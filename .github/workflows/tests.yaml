# Regular tests
#
# Use this to ensure your tests are passing on every push and PR (skipped on
# pushes which only affect documentation).
#
# You should make sure you run jobs on at least the *oldest* and the *newest*
# versions of python that your codebase is intended to support.

name: tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    timeout-minutes: 45
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install build dependencies and cythonize
        shell: bash
        run: |
          python -m venv .venv-build
          source .venv-build/bin/activate || .venv-build\Scripts\activate
          pip install "setuptools>=61.0" "setuptools-scm>=8.0" "Cython>=3.0.0"
          python cythonize.py

      - name: Install library and dependencies
        run: uv sync

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Pre-commit run
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files

      - name: Check tests folder existence
        id: check_test_files
        uses: andstor/file-existence-action@v3
        with:
          files: "tests"

      - name: Run tests
        if: steps.check_test_files.outputs.files_exists == 'true'
        run: |
          uv run python -m pytest --cov=hdiffpatch --cov-report term --cov-report xml --junitxml=testresults.xml
          uv run coverage report

      - name: Upload coverage to Codecov
        if: steps.check_test_files.outputs.files_exists == 'true'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          env_vars: OS,PYTHON
          name: Python ${{ matrix.python-version }} on ${{ runner.os }}
